version: '2'

networks:
  datapipeline:
    driver: bridge

services:
  spark:
    image: docker.io/bitnami/spark:3.4
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
      - '7077:7077'
    volumes:
      - ".:/opt/spark/"
      #- ".:/test-files:rw"
    networks:
      - datapipeline

  spark-worker-1:
    image: docker.io/bitnami/spark:3.4
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - datapipeline
    depends_on:
      - spark

  spark-worker-2:
    image: docker.io/bitnami/spark:3.4
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - datapipeline
    depends_on:
      - spark

  zookeeper-p:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper-p
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - datapipeline
  kafka1-p:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka1-p
    ports:
      - "8097:8097"
    networks:
      - datapipeline
    depends_on:
      - zookeeper-p
    volumes:
      - ".:/opt/project/"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-p:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8097,INTERNAL://kafka1-p:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  kafka2-p:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka2-p
    ports:
      - "8098:8098"
    networks:
      - datapipeline
    depends_on:
      - zookeeper-p
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-p:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8098,INTERNAL://kafka2-p:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  kafka3-p:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka3-p
    ports:
      - "8099:8099"
    networks:
      - datapipeline
    depends_on:
      - zookeeper-p
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-p:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8099,INTERNAL://kafka3-p:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL